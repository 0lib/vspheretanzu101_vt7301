name: course_registration
on:
  pull_request_target:
    types: [opened]
    paths:
    - 'static/admin/userdata/registered_members/**.yml'

jobs:
  job_verify_membership:
    name: verify_membership
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.ismember.outputs.ismember }}
    steps:
      - name: review event details
        run: |
          env
          cat /home/runner/work/_temp/_github_workflow/event.json
      - name: set source repo as org_repo
        run: |
          echo $(echo org_repo="$GITHUB_REPOSITORY") >> $GITHUB_ENV
          echo $org_repo
      - name: curl member record file
        run: |
          curl -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          "https://api.github.com/repos/modernappsninja/admin-private/contents/static/admin/userdata/members/${{ github.event.sender.login }}_${{ github.event.sender.id }}.yml" \
          -o /tmp/raw_member_record_curl.json
          cat /tmp/raw_member_record_curl.json
      - name: set envar raw_member_curl_name
        run: |
          cat /tmp/raw_member_record_curl.json | jq -r '.name' >> /tmp/raw_member_record_curl_name
          echo raw_member_curl_name=$(cat /tmp/raw_member_record_curl_name) >> $GITHUB_ENV
      - name: check if member record alredy exists to determine if this is a duplicate request
        run: |
          cat /tmp/raw_member_record_curl.json
          if [ "${{ env.raw_member_record_curl_name }}" = "${{ github.event.issue.user.login }}_${{ github.event.issue.user.id }}.yml" ]
          then
            echo ismember=true >> $GITHUB_ENV
            echo "the requesting user is a member"
          else
            echo ismember=false >> $GITHUB_ENV
            echo "the requesting user is not a member"
          fi
      - id: ismember
        if: env.ismember == 'true'
        run: echo "::set-output name=ismember::true"
      - name: if not member, post message to pr
        if: env.ismember == 'false'
        run: |
          curl -X POST \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"event": "COMMENT", "body": "@${{ github.event.sender.login }} You must first join the ModernApps Ninja Organization at https://modernapps.ninja before you can register for a course. Please open a new course registration request after you have completed the free modernapps.ninja community registration. This Pull Request will now be closed, thank you!"}' \
          "https://api.github.com/repos/${{ env.org_repo }}/pulls/${{ github.event.number }}/reviews" \
          -o /tmp/pr_comment_post_response.json
          cat /tmp/pr_comment_post_response.json
      - name: if not member, close pr
        if: env.ismember == 'false'
        run: |
          curl -X PATCH \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"state": "closed"}' \
          "https://api.github.com/repos/${{ env.org_repo }}/pulls/${{ github.event.number }}" \
          -o /tmp/close_pr_response.json
          cat /tmp/close_pr_response.json
  job_course_registration:
    name: course_registration
    needs: job_verify_membership
    runs-on: ubuntu-latest
    if: needs.job_verify_membership.outputs.output1 == 'true'
    steps:
      - name: review event details
        run: |
          env
          cat /home/runner/work/_temp/_github_workflow/event.json
      - name: install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.6.0/yq_linux_amd64 -O /usr/bin/yq &&\
          sudo chmod +x /usr/bin/yq
      - name: set org/repo as org_repo
        run: |
          echo $(echo org_repo="$GITHUB_REPOSITORY") >> $GITHUB_ENV
          org_repo="$GITHUB_REPOSITORY"
          echo $org_repo
      - name: pull course meta file
        run: |
          curl -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          "https://raw.githubusercontent.com/${{ env.org_repo }}/main/userdata/members/${{ github.event.client_payload.member_login }}_${{ github.event.client_payload.member_github_id }}.yml" \
          -o /tmp/member_record.yml
      - name: pull member course card stub
        run: |
          curl -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          "https://raw.githubusercontent.com/modernappsninja/admin-private/main/userdata/members/${{ github.event.client_payload.member_login }}_${{ github.event.client_payload.member_github_id }}.yml" \
          -o /tmp/member_record.yml
      - name: pull member course record template
        run: |
          curl -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          "https://raw.githubusercontent.com/modernappsninja/admin-private/main/userdata/members/${{ github.event.client_payload.member_login }}_${{ github.event.client_payload.member_github_id }}.yml" \
          -o /tmp/member_record.yml
      - name: create course catalog card
        run: |
          cd ${{ env.source_repo_name }}
          cat static/admin/assets/coursecards/course_meta.yml > /tmp/${{ env.course_repo_name }}.md
          cat static/admin/assets/coursecards/catalogcard/catalog_course_card >> /tmp/${{ env.course_repo_name }}.md
          cat /tmp/${{ env.course_repo_name }}.md | base64 -w 0 > /tmp/${{ env.course_repo_name }}.md.base64

      # - name: build member course card file 
      # - name: upload memver course card file to member repo
      # - name: prepare repo with scaffolding for tests
      - name: clone course repo
        run: |
          git clone https://${{ secrets.NINJABOTGURU }}:x-oauth-basic@github.com/modernappsninja/modernappsninja.github.io.git
          cd modernappsninja.github.io
          pwd
      - name: merge pull request
        run: |
          curl -X PUT \
          -H "Authorization: token ${{ secrets.NINJABOTGURU }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"commit_title": "Course Registration for ${{ github.event.sender.login }}"}'                                                        \
          "https://api.github.com/repos/${{ env.org_repo }}/pulls/${{ github.event.number }}/merge" \
          -o /tmp/course_registration_post_response.json
          cat /tmp/course_registration_post_response.json